# Generated by Django 2.2.4 on 2019-08-31 04:26

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models.profile
import users.models.profile_manager
import users.models.user
import users.models.user_manager
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('pub_id', models.CharField(default=users.models.user.str_uuid, max_length=50, unique=True, verbose_name='ID')),
                ('_position', models.CharField(choices=[('S', '生徒'), ('T', '先生')], default='N', max_length=1, verbose_name='生徒か先生か')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.user_manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(choices=[('media/users/icons/01-mexican.svg', 'media/users/icons/01-mexican.svg'), ('media/users/icons/02-man.svg', 'media/users/icons/02-man.svg'), ('media/users/icons/03-pirates.svg', 'media/users/icons/03-pirates.svg'), ('media/users/icons/04-girl.svg', 'media/users/icons/04-girl.svg'), ('media/users/icons/05-boy.svg', 'media/users/icons/05-boy.svg'), ('media/users/icons/06-chinese.svg', 'media/users/icons/06-chinese.svg'), ('media/users/icons/07-man.svg', 'media/users/icons/07-man.svg'), ('media/users/icons/08-police.svg', 'media/users/icons/08-police.svg'), ('media/users/icons/09-french.svg', 'media/users/icons/09-french.svg'), ('media/users/icons/10-girl.svg', 'media/users/icons/10-girl.svg'), ('media/users/icons/11-girl.svg', 'media/users/icons/11-girl.svg'), ('media/users/icons/12-arab.svg', 'media/users/icons/12-arab.svg'), ('media/users/icons/13-rock.svg', 'media/users/icons/13-rock.svg'), ('media/users/icons/14-boy.svg', 'media/users/icons/14-boy.svg'), ('media/users/icons/15-chinese.svg', 'media/users/icons/15-chinese.svg'), ('media/users/icons/16-girl.svg', 'media/users/icons/16-girl.svg'), ('media/users/icons/17-nun.svg', 'media/users/icons/17-nun.svg'), ('media/users/icons/18-baby.svg', 'media/users/icons/18-baby.svg'), ('media/users/icons/19-vietnam.svg', 'media/users/icons/19-vietnam.svg'), ('media/users/icons/20-clown.svg', 'media/users/icons/20-clown.svg'), ('media/users/icons/21-indian.svg', 'media/users/icons/21-indian.svg'), ('media/users/icons/22-portuguese.svg', 'media/users/icons/22-portuguese.svg'), ('media/users/icons/23-oldster.svg', 'media/users/icons/23-oldster.svg'), ('media/users/icons/24-girl.svg', 'media/users/icons/24-girl.svg'), ('media/users/icons/25-armenian.svg', 'media/users/icons/25-armenian.svg'), ('media/users/icons/26-japan.svg', 'media/users/icons/26-japan.svg'), ('media/users/icons/27-ninja.svg', 'media/users/icons/27-ninja.svg'), ('media/users/icons/28-soldier.svg', 'media/users/icons/28-soldier.svg'), ('media/users/icons/29-girl.svg', 'media/users/icons/29-girl.svg'), ('media/users/icons/30-viking.svg', 'media/users/icons/30-viking.svg'), ('media/users/icons/31-boy.svg', 'media/users/icons/31-boy.svg'), ('media/users/icons/32-arab.svg', 'media/users/icons/32-arab.svg'), ('media/users/icons/33-indian.svg', 'media/users/icons/33-indian.svg'), ('media/users/icons/34-oldster.svg', 'media/users/icons/34-oldster.svg'), ('media/users/icons/35-armenian.svg', 'media/users/icons/35-armenian.svg'), ('media/users/icons/36-user.svg', 'media/users/icons/36-user.svg'), ('media/users/icons/37-dj.svg', 'media/users/icons/37-dj.svg'), ('media/users/icons/38-girl.svg', 'media/users/icons/38-girl.svg'), ('media/users/icons/39-girl.svg', 'media/users/icons/39-girl.svg'), ('media/users/icons/40-safari.svg', 'media/users/icons/40-safari.svg'), ('media/users/icons/41-cowboy.svg', 'media/users/icons/41-cowboy.svg'), ('media/users/icons/42-boy.svg', 'media/users/icons/42-boy.svg'), ('media/users/icons/43-santa clause.svg', 'media/users/icons/43-santa clause.svg'), ('media/users/icons/44-native.svg', 'media/users/icons/44-native.svg'), ('media/users/icons/45-doctor.svg', 'media/users/icons/45-doctor.svg'), ('media/users/icons/46-russia.svg', 'media/users/icons/46-russia.svg'), ('media/users/icons/47-scientist.svg', 'media/users/icons/47-scientist.svg'), ('media/users/icons/48-girl.svg', 'media/users/icons/48-girl.svg'), ('media/users/icons/49-bellboy.svg', 'media/users/icons/49-bellboy.svg'), ('media/users/icons/50-king.svg', 'media/users/icons/50-king.svg')], default=users.models.profile.get_random_icon, max_length=100)),
                ('nickname', models.CharField(max_length=255, verbose_name='ニックネーム')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('phone', models.CharField(blank=True, max_length=255, verbose_name='電話番号')),
                ('gender', models.CharField(blank=True, choices=[('F', '女性'), ('M', '男性')], max_length=2, verbose_name='性別')),
                ('follows', models.ManyToManyField(related_name='followed_by', to='users.User')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='users.User')),
            ],
            managers=[
                ('objects', users.models.profile_manager.ProfileManager()),
            ],
        ),
    ]
